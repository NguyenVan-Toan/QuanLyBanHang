@* @model QuanLyBanHang.Data.Entities.Product *@
@model QuanLyBanHang.ViewModels.ProductViewModel


@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="Edit" id="formCreate" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="ProductName" class="control-label fw-bold mt-2"></label>
                <input asp-for="ProductName" class="form-control" />
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="ImagePath" />
            <div class="form-group">
                <label asp-for="Image" class="control-label fw-bold mt-2"></label>
                <input asp-for="Image" type="file" class="form-control" id="image-input" onchange="previewImage(event)"
                    accept="image/*" />
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>
            <div class="image-preview my-2">
                <img id="preview" width="100%" class="img-fluid" src="@Model.ImagePath" alt="Preview" />
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label fw-bold mt-2"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label fw-bold mt-2"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label fw-bold mt-2"></label>
                <input asp-for="Description" class="form-control" id="txtDesc" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label fw-bold mt-2"></label>
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary mt-2" />
                <a class="btn btn-secondary mt-2 ms-2" asp-action="Index">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.ckeditor.com/ckeditor5/40.2.0/classic/ckeditor.js"></script>
    <script>
        var oldDescription = document.querySelector('#txtDesc').value;
        ClassicEditor
            .create(document.querySelector('#txtDesc'))
            .then(editor => {
                editor.setData(oldDescription); // Gán dữ liệu cũ vào CKEditor
            })
            .catch(error => {
                console.error(error);
            });
        document.getElementById('formCreate').addEventListener('submit', function (e) {
            e.preventDefault(); // Ngăn chặn hành vi mặc định của sự kiện submit
            // Xử lý ckeditor
            var a = document.querySelector(".ck-blurred > p").textContent;
            document.querySelector('#txtDesc').value = a;
            this.submit(); // Gửi biểu mẫu đi
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#image-input').change(function () {
                var input = this;

                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#preview').attr('src', e.target.result).removeClass('d-none');
                    }

                    reader.readAsDataURL(input.files[0]);
                } else {
                    $('#preview').addClass('d-none');
                }
            });

            var imagePath = "@Model.ImagePath";
            if (imagePath == null || imagePath.trim() === "") {
                $('#preview').addClass('d-none');
            }
        });
    </script>
}
